BLOCK 'Beginning of Block'
ON BLOCK ERROR
    THROW ERROR
END
    SET ZapStatusComments TO $'''Not Executed'''
    SET ZapStatusValue TO $'''Not Executed'''
    File.WriteText File: logFilePath TextToWrite: $'''Started - CICS Zap Provision Process ''' AppendNewLine: True IfFileExists: File.IfFileExists.Append Encoding: File.FileEncoding.UTF8
    TerminalEmulation.SetTextOnTerminalSession.SetTextOnCursorPosition Session: TerminalSession Text: 45 TreatAtCharacterAsLiteral: False
    Text.GetSubtext.GetSubtextFromStartTo Text: SUBTRANS NumberOfChars: 3 Subtext=> ZapTrans
    TerminalEmulation.SetTextOnTerminalSession.SetTextOnCursorPosition Session: TerminalSession Text: ZapTrans TreatAtCharacterAsLiteral: False
    TerminalEmulation.SendKey Session: TerminalSession ControlKey: TerminalEmulation.ControlKey.Transmit
    TerminalEmulation.SetTextOnTerminalSession.SetTextOnCursorPosition Session: TerminalSession Text: 21 TreatAtCharacterAsLiteral: False
    TerminalEmulation.SendKey Session: TerminalSession ControlKey: TerminalEmulation.ControlKey.Transmit
    TerminalEmulation.SendKey Session: TerminalSession ControlKey: TerminalEmulation.ControlKey.Transmit
    TerminalEmulation.FindTextFromTerminalSession Session: TerminalSession Text: $'''(          0 BYTES)''' IsRegEx: False ColumnSize: 80 Results=> zapdone
        ON ERROR

        END
    Workstation.TakeScreenshot.TakeScreenshotAndSaveToFile File: $'''%ClientScreenshotPath%\\ZAP_Update_Validation.jpg''' ImageFormat: System.ImageFormat.Jpg
    WAIT 5
    IF IsNotEmpty(zapdone) THEN
        SET ZapStatusComments TO $'''ZAP Completed'''
        SET ZapStatusValue TO $'''Pass'''
    ELSE
        SET ZapStatusComments TO $'''ZAP not completed'''
        SET ZapStatusValue TO $'''Fail'''
    END
    TerminalEmulation.SendKey Session: TerminalSession ControlKey: TerminalEmulation.ControlKey.F3
END
